pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
        stage('User Input') {
            steps {
                // Define multiple parameters directly within the input step
                slackSend(channel: 'Notification', message: "PLease approve the build. You can access the build at - ${env.BUILD_URL}")
                script {
                    def userInput = input(
                        id: 'userInput', 
                        message: 'Please provide input:',
                        ok: 'Yes, Proceed',
                        submitter: 'smritiKumari',
                        // Specify the userid/username here, and this person must have 
                        // job - Build, Cancel and Configure permission
                        // NOTE: A Admin user is able to approve any builds 
                        submitterParameter: 'APPROVED_BY',
                        parameters: [
                            booleanParam (description: 'All good to move ahead', name: 'APPROVE'),
                            choice (choices: ['Very Bad', 'Good', 'Very Good'], description: 'How much rating you want to give to build', name: 'RATING')
                        ]
                    )

                    // Access the parameters
                    echo "User provided input for Testcase Execution: ${userInput.APPROVE}"
                    echo "User provided input for Ratings: ${userInput.RATING}"
                    echo "User provided input for Ratings: ${userInput.APPROVED_BY}"
                    
                    //You can set environment variable from user input value likeb below.
                    env.APPROVE = userInput.APPROVE
                    env.RATING = userInput.RATING
                }
            }
        }
    }
    post {
        always {
            script {
                slackSend(channel: 'Notification', message: "Build #${currentBuild.number} has finished. URL: ${env.BUILD_URL}")
            }
        }
        aborted {
            script {
                slackSend(channel: 'Notification', message: "Build #${currentBuild.number} was aborted. URL: ${env.BUILD_URL}")
            }
        }
        failure {
            script {
                slackSend(channel: 'Notification', message: "Build #${currentBuild.number} has failed. URL: ${env.BUILD_URL}")
            }
        }
    }
        
}
